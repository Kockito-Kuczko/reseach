<!DOCTYPE html>
<html>
	<head>
		<meta charset="UTF-8">
		<title></title>

		<!-- External libraries -->
		<script src="libs/jquery_2.1.0.js"></script>
		<script src="libs/three.js"></script>
		
		<!-- Custom resources -->
		<script src=""></script>
		
		<!-- Custom style -->
		<link type="text/css" rel="stylesheet" href="style.css"/>
	</head>
	
	<body>
		<div id="container"></div>
	</body>
</html>

<script>
	var $container = document.getElementById('container');
	
	$(document).ready(function() {
		var renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true});
		renderer.setSize($container.offsetWidth, $container.offsetHeight);
		renderer.setClearColor(0x000000, 1.0);
		$container.appendChild(renderer.domElement);
		
		var scene = new THREE.Scene();
		
		var camera = new THREE.PerspectiveCamera(45, $container.offsetWidth / $container.offsetHeight, 1, 1000);
		camera.position.set(0, 20, -20);
		camera.lookAt(new THREE.Vector3(0,0,0));
		scene.add(camera);
		
		var light = new THREE.DirectionalLight(0xffffff);
		
		light.position.set(0,100,60);
		light.castShadow = true;
		
		scene.add(light);
		
		var loader = new THREE.JSONLoader();
		
		loader.load('/src/cube.js', function (geometry,materials) {
			
			var material = new THREE.MeshLambertMaterial({
				map: THREE.ImageUtils.loadTexture('/src/crate.jpg'),
				colorAmbient: [0.5,0.5,0.5],
				colorDiffuse: [0.5,0.5,0.5],
				colorSpecular: [0.9,0.9,0.9]
			});
			
			var mesh = new THREE.Mesh(
				geometry,
				material
		);
			mesh.rotation.y = Math.Pi/5;
		
			scene.add(mesh);
			//render();
		});
		
		window.setInterval(function run() {
			renderer.render(scene, camera);
		}, 100);
	});
</script>
